// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: business_food.sql

package db

import (
	"context"
	"database/sql"
)

const createNewFood = `-- name: CreateNewFood :one
INSERT INTO business_food (business_id, food_img, food_title, food_description, food_price, food_available_per_day) VALUES ($1, $2, $3, $4, $5, $6)
RETURNING business_id, food_id, food_img, food_title, food_description, food_price, food_available_per_day, created_at, updated_at
`

type CreateNewFoodParams struct {
	BusinessID          int64          `json:"business_id"`
	FoodImg             string         `json:"food_img"`
	FoodTitle           string         `json:"food_title"`
	FoodDescription     sql.NullString `json:"food_description"`
	FoodPrice           int64          `json:"food_price"`
	FoodAvailablePerDay sql.NullInt16  `json:"food_available_per_day"`
}

func (q *Queries) CreateNewFood(ctx context.Context, arg CreateNewFoodParams) (BusinessFood, error) {
	row := q.db.QueryRowContext(ctx, createNewFood,
		arg.BusinessID,
		arg.FoodImg,
		arg.FoodTitle,
		arg.FoodDescription,
		arg.FoodPrice,
		arg.FoodAvailablePerDay,
	)
	var i BusinessFood
	err := row.Scan(
		&i.BusinessID,
		&i.FoodID,
		&i.FoodImg,
		&i.FoodTitle,
		&i.FoodDescription,
		&i.FoodPrice,
		&i.FoodAvailablePerDay,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
